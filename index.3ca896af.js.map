{"mappings":"ACEA,IAAM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAU,CAAA,EAER,EAAe,SAAC,CAAtB,EAC0B,IAApB,EAAS,MAAM,GACjB,EAAU,CAAA,EACV,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WACJ,GACH,EAAO,AAAI,MAAM,8BAErB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAe,SAAC,CAAtB,EACM,CAAA,AAAoB,IAApB,EAAS,MAAM,EAAU,AAAoB,IAApB,EAAS,MAAM,AAAK,IAC/C,EAAS,cAAc,GAEvB,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEI,EAAY,CAAA,EACZ,EAAa,CAAA,EAEX,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAM,EAAe,SAAC,CAAtB,EAC0B,IAApB,EAAS,MAAM,EACjB,CAAA,EAAY,CAAA,CADd,EAIwB,IAApB,EAAS,MAAM,EACjB,CAAA,EAAa,CAAA,CADf,EAII,GAAc,IAChB,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEA,SAAS,EAAoB,CAAO,CAAE,CAAS,EAC7C,IAAM,EAAM,SAAS,aAAa,CAAC,OAEnC,EAAI,YAAY,CAAC,UAAW,gBAC5B,EAAI,SAAS,CAAG,EAAY,UAAY,QACxC,EAAI,WAAW,CAAG,EAClB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAoB,EAAS,CAAA,EAC/B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAoB,EAAM,OAAO,CAAE,CAAA,EACrC,GAEF,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAoB,EAAS,CAAA,EAC/B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAoB,EAAM,OAAO,CAAE,CAAA,EACrC,GAEF,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAoB,EAAS,CAAA,EAC/B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAoB,EAAM,OAAO,CAAE,CAAA,EACrC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    var clicked = false;\n    var clickHandler = function(newEvent) {\n        if (newEvent.button === 0) {\n            clicked = true;\n            resolve(\"First promise was resolved\");\n            document.removeEventListener(\"click\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n    setTimeout(function() {\n        if (!clicked) reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    var clickHandler = function(newEvent) {\n        if (newEvent.button === 0 || newEvent.button === 2) {\n            newEvent.preventDefault();\n            resolve(\"Second promise was resolved\");\n            document.removeEventListener(\"click\", clickHandler);\n            document.removeEventListener(\"contextmenu\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n    document.addEventListener(\"contextmenu\", clickHandler);\n});\nvar leftClick = false;\nvar rightClick = false;\nvar thirdPromise = new Promise(function(resolve) {\n    var clickHandler = function(newEvent) {\n        if (newEvent.button === 0) leftClick = true;\n        if (newEvent.button === 2) rightClick = true;\n        if (rightClick && leftClick) {\n            resolve(\"Third promise was resolved\");\n            document.removeEventListener(\"click\", clickHandler);\n            document.removeEventListener(\"contextmenu\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n    document.addEventListener(\"contextmenu\", clickHandler);\n});\nfunction displayNotification(message, isSuccess) {\n    var div = document.createElement(\"div\");\n    div.setAttribute(\"data-qa\", \"notification\");\n    div.className = isSuccess ? \"success\" : \"error\";\n    div.textContent = message;\n    document.body.appendChild(div);\n}\nfirstPromise.then(function(message) {\n    displayNotification(message, true);\n}).catch(function(error) {\n    displayNotification(error.message, false);\n});\nsecondPromise.then(function(message) {\n    displayNotification(message, true);\n}).catch(function(error) {\n    displayNotification(error.message, false);\n});\nthirdPromise.then(function(message) {\n    displayNotification(message, true);\n}).catch(function(error) {\n    displayNotification(error.message, false);\n});\n\n//# sourceMappingURL=index.3ca896af.js.map\n","'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  let clicked = false;\n\n  const clickHandler = (newEvent) => {\n    if (newEvent.button === 0) {\n      clicked = true;\n      resolve('First promise was resolved');\n      document.removeEventListener('click', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n\n  setTimeout(() => {\n    if (!clicked) {\n      reject(new Error('First promise was rejected'));\n    }\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  const clickHandler = (newEvent) => {\n    if (newEvent.button === 0 || newEvent.button === 2) {\n      newEvent.preventDefault();\n\n      resolve('Second promise was resolved');\n      document.removeEventListener('click', clickHandler);\n      document.removeEventListener('contextmenu', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n  document.addEventListener('contextmenu', clickHandler);\n});\n\nlet leftClick = false;\nlet rightClick = false;\n\nconst thirdPromise = new Promise((resolve) => {\n  const clickHandler = (newEvent) => {\n    if (newEvent.button === 0) {\n      leftClick = true;\n    }\n\n    if (newEvent.button === 2) {\n      rightClick = true;\n    }\n\n    if (rightClick && leftClick) {\n      resolve('Third promise was resolved');\n      document.removeEventListener('click', clickHandler);\n      document.removeEventListener('contextmenu', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n  document.addEventListener('contextmenu', clickHandler);\n});\n\nfunction displayNotification(message, isSuccess) {\n  const div = document.createElement('div');\n\n  div.setAttribute('data-qa', 'notification');\n  div.className = isSuccess ? 'success' : 'error';\n  div.textContent = message;\n  document.body.appendChild(div);\n}\n\nfirstPromise\n  .then((message) => {\n    displayNotification(message, true);\n  })\n  .catch((error) => {\n    displayNotification(error.message, false);\n  });\n\nsecondPromise\n  .then((message) => {\n    displayNotification(message, true);\n  })\n  .catch((error) => {\n    displayNotification(error.message, false);\n  });\n\nthirdPromise\n  .then((message) => {\n    displayNotification(message, true);\n  })\n  .catch((error) => {\n    displayNotification(error.message, false);\n  });\n"],"names":["firstPromise","Promise","resolve","reject","clicked","clickHandler","newEvent","button","document","removeEventListener","addEventListener","setTimeout","Error","secondPromise","preventDefault","leftClick","rightClick","thirdPromise","displayNotification","message","isSuccess","div","createElement","setAttribute","className","textContent","body","appendChild","then","catch","error"],"version":3,"file":"index.3ca896af.js.map"}